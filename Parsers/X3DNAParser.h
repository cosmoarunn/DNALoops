/*
 * X3DNAParser.h
 *
 *  Created on: Jul 16, 2011
 *      Author: Michael Grosner
 */

#ifndef X3DNAPARSER_H_
#define X3DNAPARSER_H_

/* All the files parsed are in the X3DNA_TEMP_DIRECTORY defined in the Includes.h */
#include "Includes.h"

#include "BioModels/Entity.h"
#include "BioModels/Loop.h"
#include "BioModels/BasePair.h"
#include "BioModels/StepParameter.h"

#include <boost/tokenizer.hpp>
#include <boost/algorithm/string.hpp>

class X3DNAParser {
public:

	// Constructor and Destructor
	X3DNAParser(Entity &e);
	virtual ~X3DNAParser();

	// Do all three parsing methods in one shot. Only use this method to do
	// anything constructive
	void parse();

	// WARNING: The following three functions are helper functions to parse().
	// Do NOT call these independently!

	/* Read the *.inp file generated by find_pair. This is useful because the
	 * .inp file contains the residue numbers of the bases which form the base
	 * pairings. This can relate the Residue objects to the BasePairEntity
	 * objects.*/
	void read_inp_file();

	/* Read and parse ref_frames.dat output file which gives the coordinate
	 * system of each base pair (3D vectors containing origin, long, short, and
	 * normal axes). This function constructs the BasePairEntity objects and
	 * attaches them to the Loop */
	void get_ref_frames();

	/* Take bp_step.par, parse it to get StepParameterEntity objects, which
	 * comprise two BasePairEntity objects. The StepParameterEntity objects can
	 * then be linked to a Loop or Structure. TODO: Decide which.
	 */
	void get_bp_steps();

private:

	/* The top-level Entity which all these BasePairEntities and
	 * StepParameterEntities link up to */
	Entity& m_entity;

	// For interal use:
	// A vector of vectors of length two which connects Residues to BasePairEntities.
	vector<vector<int> > base_pairings;
	// A vector containing pointers to BasePairEntities to be connected to
	// corresponding StepParameterEntities
	vector<BasePairEntity*> bps;

};

#endif /* X3DNAPARSER_H_ */
